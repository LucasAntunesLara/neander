	.file	1 "TDqsort_small.c"
 # GNU C 2.7.2.3 [AL 1.1, MM 40] DECstation running ultrix compiled by GNU C
 # Cc1 defaults:
 # Cc1 arguments (-G value = 8, Cpu = 3000, ISA = 1):
 # -quiet -dumpbase -o
gcc2_compiled.:
__gnu_compiled_c:
	.globl	results
	.data
	.align	2
results:
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.word	-1
	.sdata
	.align	2
LC0:
	.byte	97,98,98,0,
	.align	2
LC1:
	.byte	121,111,117,0,
	.align	2
LC2:
	.byte	110,111,116,0,
	.align	2
LC3:
	.byte	105,116,0,0,
	.align	2
LC4:
	.byte	100,97,100,0,
	.align	2
LC5:
	.byte	121,111,111,0,
	.align	2
LC6:
	.byte	104,111,111,0,
	.align	2
LC7:
	.byte	111,111,0,0,
	.align	2
LC8:
	.byte	111,104,0,0,
	.align	2
LC9:
	.byte	120,120,0,0,
	.align	2
LC10:
	.byte	120,0,0,0,
	.align	2
LC11:
	.byte	102,105,101,108,100,0,0,0,
	.align	2
LC12:
	.byte	110,101,119,0,
	.align	2
LC13:
	.byte	114,111,119,0,
	.rdata
	.align	2
LC14:
	.word	LC0
	.word	LC1
	.word	LC2
	.word	LC3
	.word	LC4
	.word	LC5
	.word	LC6
	.word	LC7
	.word	LC8
	.word	LC9
	.word	LC9
	.word	LC10
	.word	LC10
	.word	LC11
	.word	LC12
	.word	LC13
	.word	0
	.text
	.align	2
	.globl	main
	.ent	main
main:
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	addi	$sp,$zero,16680
	addi	$sp,$sp,-104
	sw	$31,100($sp)
	sw	$fp,96($sp)
	move	$fp,$sp
	sw	$4,104($fp)
	sw	$5,108($fp)
	addi	$2,$fp,16
	addi	$3,$fp,16
	addi	$2,LC14($zero)
	move	$4,$3
	move	$5,$2
	li	$6,0x00000044		# 68
	jal	memcpy2
	sw	$0,92($fp)
L2:
	lw	$2,92($fp)
	move	$3,$2
	slli	$2,$3,2
	addi	$3,$fp,16
	add	$2,$2,$3
	lw	$3,0($2)
	beq	$3,$0,L5
	lw	$2,92($fp)
	slti	$3,$2,300
	bne	$3,$0,L4
	j	L5
L5:
	j	L3
L4:
	lw	$2,92($fp)
	move	$3,$2
	slli	$2,$3,2
	addi	$3,$fp,16
	add	$2,$2,$3
	lw	$4,0($2)
	jal	strlen2
	move	$3,$2
	addi	$2,$3,1
	lw	$3,92($fp)
	move	$4,$3
	slli	$3,$4,4
	addi	$4,array($zero)
	add	$3,$3,$4
	lw	$4,92($fp)
	move	$5,$4
	slli	$4,$5,2
	addi	$6,$fp,16
	add	$5,$4,$6
	move	$4,$3
	lw	$5,0($5)
	move	$6,$2
	jal	memcpy2
	lw	$3,92($fp)
	addi	$2,$3,1
	move	$3,$2
	sw	$3,92($fp)
	j	L2
L3:
	lw	$3,92($fp)
	addi	$2,$3,-1
	addi	$4,array($zero)
	move	$5,$0
	move	$6,$2
	jal	quicksortS
	addi	$2,array($zero)
	sw	$2,results($zero)
	lw	$2,92($fp)
	move	$3,$2
	slli	$2,$3,4
	addi	$3,array-16($zero)
	add	$2,$3,$2
	sw	$2,results+4($zero)
	move	$2,$0
	j	L1
L1:
	move	$sp,$fp			# sp not trusted here
	lw	$31,100($sp)
	lw	$fp,96($sp)
	addi	$sp,$sp,104
	hlt
	.end	main
	.align	2
	.globl	troca
	.ent	troca
troca:
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	addi	$sp,$sp,-40
	sw	$31,36($sp)
	sw	$fp,32($sp)
	move	$fp,$sp
	sw	$4,40($fp)
	sw	$5,44($fp)
	lw	$4,40($fp)
	jal	strlen2
	move	$3,$2
	addi	$2,$3,1
	addi	$4,$fp,16
	lw	$5,40($fp)
	move	$6,$2
	jal	memcpy2
	lw	$4,44($fp)
	jal	strlen2
	move	$3,$2
	addi	$2,$3,1
	lw	$4,40($fp)
	lw	$5,44($fp)
	move	$6,$2
	jal	memcpy2
	addi	$4,$fp,16
	jal	strlen2
	move	$3,$2
	addi	$2,$3,1
	lw	$4,44($fp)
	addi	$5,$fp,16
	move	$6,$2
	jal	memcpy2
L6:
	move	$sp,$fp			# sp not trusted here
	lw	$31,36($sp)
	lw	$fp,32($sp)
	addi	$sp,$sp,40
	jr	$31
	.end	troca
	.align	2
	.globl	separaS
	.ent	separaS
separaS:
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	addi	$sp,$sp,-48
	sw	$31,44($sp)
	sw	$fp,40($sp)
	move	$fp,$sp
	sw	$4,48($fp)
	sw	$5,52($fp)
	sw	$6,56($fp)
	lb	$2,52($fp)
	addi	$3,$2,1
	sb	$3,32($fp)
	lb	$2,56($fp)
	sb	$2,33($fp)
	lw	$2,52($fp)
	move	$3,$2
	slli	$2,$3,4
	lw	$3,48($fp)
	add	$2,$2,$3
	move	$4,$2
	jal	strlen2
	move	$3,$2
	addi	$2,$3,1
	lw	$3,52($fp)
	move	$4,$3
	slli	$3,$4,4
	lw	$4,48($fp)
	add	$3,$3,$4
	addi	$4,$fp,16
	move	$5,$3
	move	$6,$2
	jal	memcpy2
L8:
	j	L10
	j	L9
L10:
L11:
	lb	$2,32($fp)
	lw	$3,56($fp)
	slt	$2,$3,$2
	bne	$2,$0,L14
	lb	$2,32($fp)
	move	$3,$2
	slli	$2,$3,4
	lw	$3,48($fp)
	add	$2,$2,$3
	move	$4,$2
	addi	$5,$fp,16
	jal	strcmp2
	blez	$zero,$2,L13
	j	L14
L14:
	j	L12
L13:
	lb	$2,32($fp)
	addi	$3,$2,1
	move	$2,$3
	sb	$2,32($fp)
	j	L11
L12:
	.set	noreorder
	.set	reorder
L15:
	lb	$2,33($fp)
	move	$3,$2
	slli	$2,$3,4
	lw	$3,48($fp)
	add	$2,$2,$3
	addi	$4,$fp,16
	move	$5,$2
	jal	strcmp2
	bltz	$zero,$2,L17
	j	L16
L17:
	lb	$2,33($fp)
	addi	$3,$2,-1
	move	$2,$3
	sb	$2,33($fp)
	j	L15
L16:
	lb	$2,32($fp)
	lb	$3,33($fp)
	slt	$2,$2,$3
	bne	$2,$0,L18
	j	L9
L18:
	lb	$2,32($fp)
	move	$3,$2
	slli	$2,$3,4
	lw	$3,48($fp)
	add	$2,$2,$3
	lb	$3,33($fp)
	move	$4,$3
	slli	$3,$4,4
	lw	$4,48($fp)
	add	$3,$3,$4
	move	$4,$2
	move	$5,$3
	jal	troca
	lb	$2,32($fp)
	addi	$3,$2,1
	move	$2,$3
	sb	$2,32($fp)
	lb	$2,33($fp)
	addi	$3,$2,-1
	move	$2,$3
	sb	$2,33($fp)
	j	L8
L9:
	lw	$2,52($fp)
	move	$3,$2
	slli	$2,$3,4
	lw	$3,48($fp)
	add	$2,$2,$3
	lb	$3,33($fp)
	move	$4,$3
	slli	$3,$4,4
	lw	$4,48($fp)
	add	$3,$3,$4
	move	$4,$2
	move	$5,$3
	jal	troca
	lb	$3,33($fp)
	move	$2,$3
	j	L7
L7:
	move	$sp,$fp			# sp not trusted here
	lw	$31,44($sp)
	lw	$fp,40($sp)
	addi	$sp,$sp,48
	jr	$31
	.end	separaS
	.align	2
	.globl	quicksortS
	.ent	quicksortS
quicksortS:
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	addi	$sp,$sp,-32
	sw	$31,28($sp)
	sw	$fp,24($sp)
	move	$fp,$sp
	sw	$4,32($fp)
	sw	$5,36($fp)
	sw	$6,40($fp)
L20:
	lw	$2,36($fp)
	lw	$3,40($fp)
	slt	$2,$2,$3
	bne	$2,$0,L22
	j	L21
L22:
	lw	$4,32($fp)
	lw	$5,36($fp)
	lw	$6,40($fp)
	jal	separaS
	sw	$2,16($fp)
	lw	$2,16($fp)
	lw	$3,36($fp)
	subu	$2,$2,$3
	lw	$3,40($fp)
	lw	$4,16($fp)
	subu	$3,$3,$4
	slt	$2,$2,$3
	beq	$2,$0,L23
	lw	$3,16($fp)
	addi	$2,$3,-1
	lw	$4,32($fp)
	lw	$5,36($fp)
	move	$6,$2
	jal	quicksortS
	lw	$2,16($fp)
	addi	$3,$2,1
	sw	$3,36($fp)
	j	L24
L23:
	lw	$3,16($fp)
	addi	$2,$3,1
	lw	$4,32($fp)
	move	$5,$2
	lw	$6,40($fp)
	jal	quicksortS
	lw	$2,16($fp)
	addi	$3,$2,-1
	sw	$3,40($fp)
L24:
	j	L20
L21:
L19:
	move	$sp,$fp			# sp not trusted here
	lw	$31,28($sp)
	lw	$fp,24($sp)
	addi	$sp,$sp,32
	jr	$31
	.end	quicksortS
	.align	2
	.globl	strlen2
	.ent	strlen2
strlen2:
	.mask	0x40000000,-8
	.fmask	0x00000000,0
	addi	$sp,$sp,-16
	sw	$fp,8($sp)
	move	$fp,$sp
	sw	$4,16($fp)
	lw	$2,16($fp)
	sw	$2,0($fp)
	sw	$0,4($fp)
L26:
	lw	$2,0($fp)
	addi	$3,$2,1
	sw	$3,0($fp)
	lb	$2,0($2)
	bne	$2,$0,L29
	j	L27
L29:
	lw	$3,4($fp)
	addi	$2,$3,1
	move	$3,$2
	sw	$3,4($fp)
L28:
	j	L26
L27:
	lw	$2,4($fp)
	j	L25
L25:
	move	$sp,$fp			# sp not trusted here
	lw	$fp,8($sp)
	addi	$sp,$sp,16
	jr	$31
	.end	strlen2
	.align	2
	.globl	strcmp2
	.ent	strcmp2
strcmp2:
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	addi	$sp,$sp,-40
	sw	$31,36($sp)
	sw	$fp,32($sp)
	move	$fp,$sp
	sw	$4,40($fp)
	sw	$5,44($fp)
	lw	$4,40($fp)
	jal	strlen2
	sw	$2,20($fp)
	lw	$4,44($fp)
	jal	strlen2
	sw	$2,24($fp)
	lw	$2,20($fp)
	lw	$3,24($fp)
	slt	$2,$3,$2
	bne	$2,$0,L31
	lw	$2,20($fp)
	j	L32
L31:
	lw	$2,24($fp)
L32:
	sw	$2,28($fp)
	sw	$0,16($fp)
L33:
	lw	$2,16($fp)
	lw	$3,28($fp)
	slt	$2,$2,$3
	bne	$2,$0,L36
	j	L34
L36:
	lw	$2,40($fp)
	lw	$3,16($fp)
	add	$2,$2,$3
	lw	$3,44($fp)
	lw	$4,16($fp)
	add	$3,$3,$4
	lb	$2,0($2)
	lb	$3,0($3)
	beq	$2,$3,L37
	lw	$2,40($fp)
	lw	$4,16($fp)
	add	$3,$2,$4
	lb	$2,0($3)
	lw	$3,44($fp)
	lw	$4,16($fp)
	add	$3,$3,$4
	lb	$4,0($3)
	subu	$3,$2,$4
	move	$2,$3
	j	L30
L37:
L35:
	lw	$3,16($fp)
	addi	$2,$3,1
	move	$3,$2
	sw	$3,16($fp)
	j	L33
L34:
	lw	$2,20($fp)
	lw	$3,24($fp)
	slt	$2,$3,$2
	beq	$2,$0,L38
	li	$2,0x00000001		# 1
	j	L30
	j	L39
L38:
	lw	$2,24($fp)
	lw	$3,20($fp)
	slt	$2,$3,$2
	beq	$2,$0,L40
	li	$2,-1			# 0xffffffff
	j	L30
	j	L41
L40:
	move	$2,$0
	j	L30
L41:
L39:
L30:
	move	$sp,$fp			# sp not trusted here
	lw	$31,36($sp)
	lw	$fp,32($sp)
	addi	$sp,$sp,40
	jr	$31
	.end	strcmp2
	.align	2
	.globl	memcpy2
	.ent	memcpy2
memcpy2:
	.mask	0x40000000,-8
	.fmask	0x00000000,0
	addi	$sp,$sp,-16
	sw	$fp,8($sp)
	move	$fp,$sp
	sw	$4,16($fp)
	sw	$5,20($fp)
	sw	$6,24($fp)
	sw	$0,0($fp)
L43:
	lw	$2,0($fp)
	lw	$3,24($fp)
	slt	$2,$2,$3
	bne	$2,$0,L46
	j	L44
L46:
	lw	$2,16($fp)
	addi	$3,$2,1
	sw	$3,16($fp)
	lw	$3,20($fp)
	addi	$4,$3,1
	sw	$4,20($fp)
	lb	$3,0($3)
	sb	$3,0($2)
L45:
	lw	$3,0($fp)
	addi	$2,$3,1
	move	$3,$2
	sw	$3,0($fp)
	j	L43
L44:
L42:
	move	$sp,$fp			# sp not trusted here
	lw	$fp,8($sp)
	addi	$sp,$sp,16
	jr	$31
	.end	memcpy2
	.data
array:	.word	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
